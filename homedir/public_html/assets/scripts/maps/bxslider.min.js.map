{"version":3,"sources":["bxslider.js"],"names":["$","plugin","defaults","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","slideZIndex","wrapperClass","touchEnabled","swipeThreshold","oneToOneTouch","preventDefaultSwipeX","preventDefaultSwipeY","pager","pagerType","pagerShortSeparator","pagerSelector","buildPager","pagerCustom","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","autoControlsCombine","autoControlsSelector","auto","pause","autoStart","autoDirection","autoHover","autoDelay","autoSlideForOnePage","minSlides","maxSlides","moveSlides","slideWidth","onSliderLoad","onSlideBefore","onSlideAfter","onSlideNext","onSlidePrev","onSliderResize","fn","bxSlider","options","this","length","each","slider","el","windowWidth","window","width","windowHeight","height","init","settings","extend","parseInt","children","Math","floor","random","active","index","carousel","minThreshold","maxThreshold","working","interval","animProp","usingCSS","div","document","createElement","props","i","undefined","style","cssPrefix","replace","toLowerCase","data","attr","setup","wrap","viewport","parent","loader","prepend","css","position","getNumberSlidesShowing","overflow","maxWidth","getViewportMaxWidth","margin","float","listStyle","getSlideWidth","zIndex","display","eq","appendCaptions","last","getPagerQty","fitVids","preloadSelector","appendPager","appendControls","appendControlsAuto","after","loadElements","start","selector","callback","total","find","count","one","complete","load","slice","sliceAppend","clone","addClass","slicePrepend","append","remove","setSlidePosition","getViewportHeight","redrawSlider","initialized","bind","resizeWindow","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","currentIndex","getMoveBy","add","outerHeight","max","apply","map","get","parseFloat","newElWidth","wrapWidth","slidesShowing","childWidth","first","pagerQty","ceil","breakPoint","counter","lastChild","setPositionProperty","left","outerWidth","lastShowingIndex","top","value","type","duration","params","propValue","unbind","updateAfterSlideTransition","tickerLoop","animateObj","animate","populatePager","pagerHtml","linkContent","isFunction","pagerEl","html","on","clickPagerBind","next","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","updateAutoControls","title","e","stopAuto","goToNextSlide","preventDefault","goToPrevSlide","startAuto","pagerLink","currentTarget","pagerIndex","goToSlide","slideIndex","len","removeClass","oldIndex","state","setTimeout","hover","autoPaused","startPosition","totalDimens","ratio","property","newSpeed","abs","resumeSpeed","reset","animateProperty","resetValue","touch","x","y","end","onTouchStart","originalPos","orig","originalEvent","changedTouches","pageX","pageY","onTouchMove","onTouchEnd","xMovement","yMovement","change","distance","windowWidthNew","windowHeightNew","call","direction","filter","fadeOut","fadeIn","moveBy","requestEl","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideCount","destroySlider","removeAttr","unwrap","reloadSlider","jQuery"],"mappings":"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","file":"bxslider.min.js","sourcesContent":["/**\n * BxSlider v4.1.2 - Fully loaded, responsive content slider\n * http://bxslider.com\n *\n * Copyright 2014, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com\n * Written while drinking Belgian ales and listening to jazz\n *\n * Released under the MIT license - http://opensource.org/licenses/MIT\n */\n\n;(function($){\n\n\tvar plugin = {};\n\n\tvar defaults = {\n\n\t\t// GENERAL\n\t\tmode: 'horizontal',\n\t\tslideSelector: '',\n\t\tinfiniteLoop: true,\n\t\thideControlOnEnd: false,\n\t\tspeed: 500,\n\t\teasing: null,\n\t\tslideMargin: 0,\n\t\tstartSlide: 0,\n\t\trandomStart: false,\n\t\tcaptions: false,\n\t\tticker: false,\n\t\ttickerHover: false,\n\t\tadaptiveHeight: false,\n\t\tadaptiveHeightSpeed: 500,\n\t\tvideo: false,\n\t\tuseCSS: true,\n\t\tpreloadImages: 'visible',\n\t\tresponsive: true,\n\t\tslideZIndex: 50,\n\t\twrapperClass: 'bx-wrapper',\n\n\t\t// TOUCH\n\t\ttouchEnabled: true,\n\t\tswipeThreshold: 50,\n\t\toneToOneTouch: true,\n\t\tpreventDefaultSwipeX: true,\n\t\tpreventDefaultSwipeY: false,\n\n\t\t// PAGER\n\t\tpager: true,\n\t\tpagerType: 'full',\n\t\tpagerShortSeparator: ' / ',\n\t\tpagerSelector: null,\n\t\tbuildPager: null,\n\t\tpagerCustom: null,\n\n\t\t// CONTROLS\n\t\tcontrols: true,\n\t\tnextText: 'Next',\n\t\tprevText: 'Prev',\n\t\tnextSelector: null,\n\t\tprevSelector: null,\n\t\tautoControls: false,\n\t\tstartText: 'Start',\n\t\tstopText: 'Stop',\n\t\tautoControlsCombine: false,\n\t\tautoControlsSelector: null,\n\n\t\t// AUTO\n\t\tauto: false,\n\t\tpause: 4000,\n\t\tautoStart: true,\n\t\tautoDirection: 'next',\n\t\tautoHover: false,\n\t\tautoDelay: 0,\n\t\tautoSlideForOnePage: false,\n\n\t\t// CAROUSEL\n\t\tminSlides: 1,\n\t\tmaxSlides: 1,\n\t\tmoveSlides: 0,\n\t\tslideWidth: 0,\n\n\t\t// CALLBACKS\n\t\tonSliderLoad: function() {},\n\t\tonSlideBefore: function() {},\n\t\tonSlideAfter: function() {},\n\t\tonSlideNext: function() {},\n\t\tonSlidePrev: function() {},\n\t\tonSliderResize: function() {}\n\t}\n\n\t$.fn.bxSlider = function(options){\n\n\t\tif(this.length == 0) return this;\n\n\t\t// support mutltiple elements\n\t\tif(this.length > 1){\n\t\t\tthis.each(function(){$(this).bxSlider(options)});\n\t\t\treturn this;\n\t\t}\n\n\t\t// create a namespace to be used throughout the plugin\n\t\tvar slider = {};\n\t\t// set a reference to our slider element\n\t\tvar el = this;\n\t\tplugin.el = this;\n\n\t\t/**\n\t\t * Makes slideshow responsive\n\t\t */\n\t\t// first get the original window dimens (thanks alot IE)\n\t\tvar windowWidth = $(window).width();\n\t\tvar windowHeight = $(window).height();\n\n\n\n\t\t/**\n\t\t * ===================================================================================\n\t\t * = PRIVATE FUNCTIONS\n\t\t * ===================================================================================\n\t\t */\n\n\t\t/**\n\t\t * Initializes namespace settings to be used throughout plugin\n\t\t */\n\t\tvar init = function(){\n\t\t\t// merge user-supplied options with the defaults\n\t\t\tslider.settings = $.extend({}, defaults, options);\n\t\t\t// parse slideWidth setting\n\t\t\tslider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n\t\t\t// store the original children\n\t\t\tslider.children = el.children(slider.settings.slideSelector);\n\t\t\t// check if actual number of slides is less than minSlides / maxSlides\n\t\t\tif(slider.children.length < slider.settings.minSlides) slider.settings.minSlides = slider.children.length;\n\t\t\tif(slider.children.length < slider.settings.maxSlides) slider.settings.maxSlides = slider.children.length;\n\t\t\t// if random start, set the startSlide setting to random number\n\t\t\tif(slider.settings.randomStart) slider.settings.startSlide = Math.floor(Math.random() * slider.children.length);\n\t\t\t// store active slide information\n\t\t\tslider.active = { index: slider.settings.startSlide }\n\t\t\t// store if the slider is in carousel mode (displaying / moving multiple slides)\n\t\t\tslider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1;\n\t\t\t// if carousel, force preloadImages = 'all'\n\t\t\tif(slider.carousel) slider.settings.preloadImages = 'all';\n\t\t\t// calculate the min / max width thresholds based on min / max number of slides\n\t\t\t// used to setup and update carousel slides dimensions\n\t\t\tslider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n\t\t\tslider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n\t\t\t// store the current state of the slider (if currently animating, working is true)\n\t\t\tslider.working = false;\n\t\t\t// initialize the controls object\n\t\t\tslider.controls = {};\n\t\t\t// initialize an auto interval\n\t\t\tslider.interval = null;\n\t\t\t// determine which property to use for transitions\n\t\t\tslider.animProp = slider.settings.mode == 'vertical' ? 'top' : 'left';\n\t\t\t// determine if hardware acceleration can be used\n\t\t\tslider.usingCSS = slider.settings.useCSS && slider.settings.mode != 'fade' && (function(){\n\t\t\t\t// create our test div element\n\t\t\t\tvar div = document.createElement('div');\n\t\t\t\t// css transition properties\n\t\t\t\tvar props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n\t\t\t\t// test for each property\n\t\t\t\tfor(var i in props){\n\t\t\t\t\tif(div.style[props[i]] !== undefined){\n\t\t\t\t\t\tslider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n\t\t\t\t\t\tslider.animProp = '-' + slider.cssPrefix + '-transform';\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}());\n\t\t\t// if vertical mode always make maxSlides and minSlides equal\n\t\t\tif(slider.settings.mode == 'vertical') slider.settings.maxSlides = slider.settings.minSlides;\n\t\t\t// save original style data\n\t\t\tel.data(\"origStyle\", el.attr(\"style\"));\n\t\t\tel.children(slider.settings.slideSelector).each(function() {\n\t\t\t  $(this).data(\"origStyle\", $(this).attr(\"style\"));\n\t\t\t});\n\t\t\t// perform all DOM / CSS modifications\n\t\t\tsetup();\n\t\t}\n\n\t\t/**\n\t\t * Performs all DOM and CSS modifications\n\t\t */\n\t\tvar setup = function(){\n\t\t\t// wrap el in a wrapper\n\t\t\tel.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n\t\t\t// store a namspace reference to .bx-viewport\n\t\t\tslider.viewport = el.parent();\n\t\t\t// add a loading div to display while images are loading\n\t\t\tslider.loader = $('<div class=\"bx-loading\" />');\n\t\t\tslider.viewport.prepend(slider.loader);\n\t\t\t// set el to a massive width, to hold any needed slides\n\t\t\t// also strip any margin and padding from el\n\t\t\tel.css({\n\t\t\t\twidth: slider.settings.mode == 'horizontal' ? (slider.children.length * 100 + 215) + '%' : 'auto',\n\t\t\t\tposition: 'relative'\n\t\t\t});\n\t\t\t// if using CSS, add the easing property\n\t\t\tif(slider.usingCSS && slider.settings.easing){\n\t\t\t\tel.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n\t\t\t// if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n\t\t\t}else if(!slider.settings.easing){\n\t\t\t\tslider.settings.easing = 'swing';\n\t\t\t}\n\t\t\tvar slidesShowing = getNumberSlidesShowing();\n\t\t\t// make modifications to the viewport (.bx-viewport)\n\t\t\tslider.viewport.css({\n\t\t\t\twidth: '100%',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tposition: 'relative'\n\t\t\t});\n\t\t\tslider.viewport.parent().css({\n\t\t\t\tmaxWidth: getViewportMaxWidth()\n\t\t\t});\n\t\t\t// make modification to the wrapper (.bx-wrapper)\n\t\t\tif(!slider.settings.pager) {\n\t\t\t\tslider.viewport.parent().css({\n\t\t\t\tmargin: '0 auto 0px'\n\t\t\t\t});\n\t\t\t}\n\t\t\t// apply css to all slider children\n\t\t\tslider.children.css({\n\t\t\t\t'float': slider.settings.mode == 'horizontal' ? 'left' : 'none',\n\t\t\t\tlistStyle: 'none',\n\t\t\t\tposition: 'relative'\n\t\t\t});\n\t\t\t// apply the calculated width after the float is applied to prevent scrollbar interference\n\t\t\tslider.children.css('width', getSlideWidth());\n\t\t\t// if slideMargin is supplied, add the css\n\t\t\tif(slider.settings.mode == 'horizontal' && slider.settings.slideMargin > 0) slider.children.css('marginRight', slider.settings.slideMargin);\n\t\t\tif(slider.settings.mode == 'vertical' && slider.settings.slideMargin > 0) slider.children.css('marginBottom', slider.settings.slideMargin);\n\t\t\t// if \"fade\" mode, add positioning and z-index CSS\n\t\t\tif(slider.settings.mode == 'fade'){\n\t\t\t\tslider.children.css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tzIndex: 0,\n\t\t\t\t\tdisplay: 'none'\n\t\t\t\t});\n\t\t\t\t// prepare the z-index on the showing element\n\t\t\t\tslider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n\t\t\t}\n\t\t\t// create an element to contain all slider controls (pager, start / stop, etc)\n\t\t\tslider.controls.el = $('<div class=\"bx-controls\" />');\n\t\t\t// if captions are requested, add them\n\t\t\tif(slider.settings.captions) appendCaptions();\n\t\t\t// check if startSlide is last slide\n\t\t\tslider.active.last = slider.settings.startSlide == getPagerQty() - 1;\n\t\t\t// if video is true, set up the fitVids plugin\n\t\t\tif(slider.settings.video) el.fitVids();\n\t\t\t// set the default preload selector (visible)\n\t\t\tvar preloadSelector = slider.children.eq(slider.settings.startSlide);\n\t\t\tif (slider.settings.preloadImages == \"all\") preloadSelector = slider.children;\n\t\t\t// only check for control addition if not in \"ticker\" mode\n\t\t\tif(!slider.settings.ticker){\n\t\t\t\t// if pager is requested, add it\n\t\t\t\tif(slider.settings.pager) appendPager();\n\t\t\t\t// if controls are requested, add them\n\t\t\t\tif(slider.settings.controls) appendControls();\n\t\t\t\t// if auto is true, and auto controls are requested, add them\n\t\t\t\tif(slider.settings.auto && slider.settings.autoControls) appendControlsAuto();\n\t\t\t\t// if any control option is requested, add the controls wrapper\n\t\t\t\tif(slider.settings.controls || slider.settings.autoControls || slider.settings.pager) slider.viewport.after(slider.controls.el);\n\t\t\t// if ticker mode, do not allow a pager\n\t\t\t}else{\n\t\t\t\tslider.settings.pager = false;\n\t\t\t}\n\t\t\t// preload all images, then perform final DOM / CSS modifications that depend on images being loaded\n\t\t\tloadElements(preloadSelector, start);\n\t\t}\n\n\t\tvar loadElements = function(selector, callback){\n\t\t\tvar total = selector.find('img, iframe').length;\n\t\t\tif (total == 0){\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar count = 0;\n\t\t\tselector.find('img, iframe').each(function(){\n\t\t\t\t$(this).one('load', function() {\n\t\t\t\t  if(++count == total) callback();\n\t\t\t\t}).each(function() {\n\t\t\t\t  if(this.complete) $(this).load();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Start the slider\n\t\t */\n\t\tvar start = function(){\n\t\t\t// if infinite loop, prepare additional slides\n\t\t\tif(slider.settings.infiniteLoop && slider.settings.mode != 'fade' && !slider.settings.ticker){\n\t\t\t\tvar slice = slider.settings.mode == 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides;\n\t\t\t\tvar sliceAppend = slider.children.slice(0, slice).clone().addClass('bx-clone');\n\t\t\t\tvar slicePrepend = slider.children.slice(-slice).clone().addClass('bx-clone');\n\t\t\t\tel.append(sliceAppend).prepend(slicePrepend);\n\t\t\t}\n\t\t\t// remove the loading DOM element\n\t\t\tslider.loader.remove();\n\t\t\t// set the left / top position of \"el\"\n\t\t\tsetSlidePosition();\n\t\t\t// if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n\t\t\tif (slider.settings.mode == 'vertical') slider.settings.adaptiveHeight = true;\n\t\t\t// set the viewport height\n\t\t\tslider.viewport.height(getViewportHeight());\n\t\t\t// make sure everything is positioned just right (same as a window resize)\n\t\t\tel.redrawSlider();\n\t\t\t// onSliderLoad callback\n\t\t\tslider.settings.onSliderLoad(slider.active.index);\n\t\t\t// slider has been fully initialized\n\t\t\tslider.initialized = true;\n\t\t\t// bind the resize call to the window\n\t\t\tif (slider.settings.responsive) $(window).bind('resize', resizeWindow);\n\t\t\t// if auto is true and has more than 1 page, start the show\n\t\t\tif (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) initAuto();\n\t\t\t// if ticker is true, start the ticker\n\t\t\tif (slider.settings.ticker) initTicker();\n\t\t\t// if pager is requested, make the appropriate pager link active\n\t\t\tif (slider.settings.pager) updatePagerActive(slider.settings.startSlide);\n\t\t\t// check for any updates to the controls (like hideControlOnEnd updates)\n\t\t\tif (slider.settings.controls) updateDirectionControls();\n\t\t\t// if touchEnabled is true, setup the touch events\n\t\t\tif (slider.settings.touchEnabled && !slider.settings.ticker) initTouch();\n\t\t}\n\n\t\t/**\n\t\t * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n\t\t */\n\t\tvar getViewportHeight = function(){\n\t\t\tvar height = 0;\n\t\t\t// first determine which children (slides) should be used in our height calculation\n\t\t\tvar children = $();\n\t\t\t// if mode is not \"vertical\" and adaptiveHeight is false, include all children\n\t\t\tif(slider.settings.mode != 'vertical' && !slider.settings.adaptiveHeight){\n\t\t\t\tchildren = slider.children;\n\t\t\t}else{\n\t\t\t\t// if not carousel, return the single active child\n\t\t\t\tif(!slider.carousel){\n\t\t\t\t\tchildren = slider.children.eq(slider.active.index);\n\t\t\t\t// if carousel, return a slice of children\n\t\t\t\t}else{\n\t\t\t\t\t// get the individual slide index\n\t\t\t\t\tvar currentIndex = slider.settings.moveSlides == 1 ? slider.active.index : slider.active.index * getMoveBy();\n\t\t\t\t\t// add the current slide to the children\n\t\t\t\t\tchildren = slider.children.eq(currentIndex);\n\t\t\t\t\t// cycle through the remaining \"showing\" slides\n\t\t\t\t\tfor (i = 1; i <= slider.settings.maxSlides - 1; i++){\n\t\t\t\t\t\t// if looped back to the start\n\t\t\t\t\t\tif(currentIndex + i >= slider.children.length){\n\t\t\t\t\t\t\tchildren = children.add(slider.children.eq(i - 1));\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tchildren = children.add(slider.children.eq(currentIndex + i));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if \"vertical\" mode, calculate the sum of the heights of the children\n\t\t\tif(slider.settings.mode == 'vertical'){\n\t\t\t\tchildren.each(function(index) {\n\t\t\t\t  height += $(this).outerHeight();\n\t\t\t\t});\n\t\t\t\t// add user-supplied margins\n\t\t\t\tif(slider.settings.slideMargin > 0){\n\t\t\t\t\theight += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n\t\t\t\t}\n\t\t\t// if not \"vertical\" mode, calculate the max height of the children\n\t\t\t}else{\n\t\t\t\theight = Math.max.apply(Math, children.map(function(){\n\t\t\t\t\treturn $(this).outerHeight(false);\n\t\t\t\t}).get());\n\t\t\t}\n\n\t\t\tif(slider.viewport.css('box-sizing') == 'border-box'){\n\t\t\t\theight +=\tparseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n\t\t\t\t\t\t\tparseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n\t\t\t}else if(slider.viewport.css('box-sizing') == 'padding-box'){\n\t\t\t\theight +=\tparseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n\t\t\t}\n\n\t\t\treturn height;\n\t\t}\n\n\t\t/**\n\t\t * Returns the calculated width to be used for the outer wrapper / viewport\n\t\t */\n\t\tvar getViewportMaxWidth = function(){\n\t\t\tvar width = '100%';\n\t\t\tif(slider.settings.slideWidth > 0){\n\t\t\t\tif(slider.settings.mode == 'horizontal'){\n\t\t\t\t\twidth = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n\t\t\t\t}else{\n\t\t\t\t\twidth = slider.settings.slideWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn width;\n\t\t}\n\n\t\t/**\n\t\t * Returns the calculated width to be applied to each slide\n\t\t */\n\t\tvar getSlideWidth = function(){\n\t\t\t// start with any user-supplied slide width\n\t\t\tvar newElWidth = slider.settings.slideWidth;\n\t\t\t// get the current viewport width\n\t\t\tvar wrapWidth = slider.viewport.width();\n\t\t\t// if slide width was not supplied, or is larger than the viewport use the viewport width\n\t\t\tif(slider.settings.slideWidth == 0 ||\n\t\t\t\t(slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n\t\t\t\tslider.settings.mode == 'vertical'){\n\t\t\t\tnewElWidth = wrapWidth;\n\t\t\t// if carousel, use the thresholds to determine the width\n\t\t\t}else if(slider.settings.maxSlides > 1 && slider.settings.mode == 'horizontal'){\n\t\t\t\tif(wrapWidth > slider.maxThreshold){\n\t\t\t\t\t// newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.maxSlides - 1))) / slider.settings.maxSlides;\n\t\t\t\t}else if(wrapWidth < slider.minThreshold){\n\t\t\t\t\tnewElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newElWidth;\n\t\t}\n\n\t\t/**\n\t\t * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n\t\t */\n\t\tvar getNumberSlidesShowing = function(){\n\t\t\tvar slidesShowing = 1;\n\t\t\tif(slider.settings.mode == 'horizontal' && slider.settings.slideWidth > 0){\n\t\t\t\t// if viewport is smaller than minThreshold, return minSlides\n\t\t\t\tif(slider.viewport.width() < slider.minThreshold){\n\t\t\t\t\tslidesShowing = slider.settings.minSlides;\n\t\t\t\t// if viewport is larger than minThreshold, return maxSlides\n\t\t\t\t}else if(slider.viewport.width() > slider.maxThreshold){\n\t\t\t\t\tslidesShowing = slider.settings.maxSlides;\n\t\t\t\t// if viewport is between min / max thresholds, divide viewport width by first child width\n\t\t\t\t}else{\n\t\t\t\t\tvar childWidth = slider.children.first().width() + slider.settings.slideMargin;\n\t\t\t\t\tslidesShowing = Math.floor((slider.viewport.width() +\n\t\t\t\t\t\tslider.settings.slideMargin) / childWidth);\n\t\t\t\t}\n\t\t\t// if \"vertical\" mode, slides showing will always be minSlides\n\t\t\t}else if(slider.settings.mode == 'vertical'){\n\t\t\t\tslidesShowing = slider.settings.minSlides;\n\t\t\t}\n\t\t\treturn slidesShowing;\n\t\t}\n\n\t\t/**\n\t\t * Returns the number of pages (one full viewport of slides is one \"page\")\n\t\t */\n\t\tvar getPagerQty = function(){\n\t\t\tvar pagerQty = 0;\n\t\t\t// if moveSlides is specified by the user\n\t\t\tif(slider.settings.moveSlides > 0){\n\t\t\t\tif(slider.settings.infiniteLoop){\n\t\t\t\t\tpagerQty = Math.ceil(slider.children.length / getMoveBy());\n\t\t\t\t}else{\n\t\t\t\t\t// use a while loop to determine pages\n\t\t\t\t\tvar breakPoint = 0;\n\t\t\t\t\tvar counter = 0\n\t\t\t\t\t// when breakpoint goes above children length, counter is the number of pages\n\t\t\t\t\twhile (breakPoint < slider.children.length){\n\t\t\t\t\t\t++pagerQty;\n\t\t\t\t\t\tbreakPoint = counter + getNumberSlidesShowing();\n\t\t\t\t\t\tcounter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t// if moveSlides is 0 (auto) divide children length by sides showing, then round up\n\t\t\t}else{\n\t\t\t\tpagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n\t\t\t}\n\t\t\treturn pagerQty;\n\t\t}\n\n\t\t/**\n\t\t * Returns the number of indivual slides by which to shift the slider\n\t\t */\n\t\tvar getMoveBy = function(){\n\t\t\t// if moveSlides was set by the user and moveSlides is less than number of slides showing\n\t\t\tif(slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()){\n\t\t\t\treturn slider.settings.moveSlides;\n\t\t\t}\n\t\t\t// if moveSlides is 0 (auto)\n\t\t\treturn getNumberSlidesShowing();\n\t\t}\n\n\t\t/**\n\t\t * Sets the slider's (el) left or top position\n\t\t */\n\t\tvar setSlidePosition = function(){\n\t\t\t// if last slide, not infinite loop, and number of children is larger than specified maxSlides\n\t\t\tif(slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop){\n\t\t\t\tif (slider.settings.mode == 'horizontal'){\n\t\t\t\t\t// get the last child's position\n\t\t\t\t\tvar lastChild = slider.children.last();\n\t\t\t\t\tvar position = lastChild.position();\n\t\t\t\t\t// set the left position\n\t\t\t\t\tsetPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n\t\t\t\t}else if(slider.settings.mode == 'vertical'){\n\t\t\t\t\t// get the last showing index's position\n\t\t\t\t\tvar lastShowingIndex = slider.children.length - slider.settings.minSlides;\n\t\t\t\t\tvar position = slider.children.eq(lastShowingIndex).position();\n\t\t\t\t\t// set the top position\n\t\t\t\t\tsetPositionProperty(-position.top, 'reset', 0);\n\t\t\t\t}\n\t\t\t// if not last slide\n\t\t\t}else{\n\t\t\t\t// get the position of the first showing slide\n\t\t\t\tvar position = slider.children.eq(slider.active.index * getMoveBy()).position();\n\t\t\t\t// check for last slide\n\t\t\t\tif (slider.active.index == getPagerQty() - 1) slider.active.last = true;\n\t\t\t\t// set the repective position\n\t\t\t\tif (position != undefined){\n\t\t\t\t\tif (slider.settings.mode == 'horizontal') setPositionProperty(-position.left, 'reset', 0);\n\t\t\t\t\telse if (slider.settings.mode == 'vertical') setPositionProperty(-position.top, 'reset', 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Sets the el's animating property position (which in turn will sometimes animate el).\n\t\t * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n\t\t *\n\t\t * @param value (int)\n\t\t *  - the animating property's value\n\t\t *\n\t\t * @param type (string) 'slider', 'reset', 'ticker'\n\t\t *  - the type of instance for which the function is being\n\t\t *\n\t\t * @param duration (int)\n\t\t *  - the amount of time (in ms) the transition should occupy\n\t\t *\n\t\t * @param params (array) optional\n\t\t *  - an optional parameter containing any variables that need to be passed in\n\t\t */\n\t\tvar setPositionProperty = function(value, type, duration, params){\n\t\t\t// use CSS transform\n\t\t\tif(slider.usingCSS){\n\t\t\t\t// determine the translate3d value\n\t\t\t\tvar propValue = slider.settings.mode == 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n\t\t\t\t// add the CSS transition-duration\n\t\t\t\tel.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n\t\t\t\tif(type == 'slide'){\n\t\t\t\t\t// set the property value\n\t\t\t\t\tel.css(slider.animProp, propValue);\n\t\t\t\t\t// bind a callback method - executes when CSS transition completes\n\t\t\t\t\tel.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){\n\t\t\t\t\t\t// unbind the callback\n\t\t\t\t\t\tel.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n\t\t\t\t\t\tupdateAfterSlideTransition();\n\t\t\t\t\t});\n\t\t\t\t}else if(type == 'reset'){\n\t\t\t\t\tel.css(slider.animProp, propValue);\n\t\t\t\t}else if(type == 'ticker'){\n\t\t\t\t\t// make the transition use 'linear'\n\t\t\t\t\tel.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n\t\t\t\t\tel.css(slider.animProp, propValue);\n\t\t\t\t\t// bind a callback method - executes when CSS transition completes\n\t\t\t\t\tel.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){\n\t\t\t\t\t\t// unbind the callback\n\t\t\t\t\t\tel.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n\t\t\t\t\t\t// reset the position\n\t\t\t\t\t\tsetPositionProperty(params['resetValue'], 'reset', 0);\n\t\t\t\t\t\t// start the loop again\n\t\t\t\t\t\ttickerLoop();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t// use JS animate\n\t\t\t}else{\n\t\t\t\tvar animateObj = {};\n\t\t\t\tanimateObj[slider.animProp] = value;\n\t\t\t\tif(type == 'slide'){\n\t\t\t\t\tel.animate(animateObj, duration, slider.settings.easing, function(){\n\t\t\t\t\t\tupdateAfterSlideTransition();\n\t\t\t\t\t});\n\t\t\t\t}else if(type == 'reset'){\n\t\t\t\t\tel.css(slider.animProp, value)\n\t\t\t\t}else if(type == 'ticker'){\n\t\t\t\t\tel.animate(animateObj, speed, 'linear', function(){\n\t\t\t\t\t\tsetPositionProperty(params['resetValue'], 'reset', 0);\n\t\t\t\t\t\t// run the recursive loop after animation\n\t\t\t\t\t\ttickerLoop();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Populates the pager with proper amount of pages\n\t\t */\n\t\tvar populatePager = function(){\n\t\t\tvar pagerHtml = '';\n\t\t\tvar pagerQty = getPagerQty();\n\t\t\t// loop through each pager item\n\t\t\tfor(var i=0; i < pagerQty; i++){\n\t\t\t\tvar linkContent = '';\n\t\t\t\t// if a buildPager function is supplied, use it to get pager link value, else use index + 1\n\t\t\t\tif(slider.settings.buildPager && $.isFunction(slider.settings.buildPager)){\n\t\t\t\t\tlinkContent = slider.settings.buildPager(i);\n\t\t\t\t\tslider.pagerEl.addClass('bx-custom-pager');\n\t\t\t\t}else{\n\t\t\t\t\tlinkContent = i + 1;\n\t\t\t\t\tslider.pagerEl.addClass('bx-default-pager');\n\t\t\t\t}\n\t\t\t\t// var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n\t\t\t\t// add the markup to the string\n\t\t\t\tpagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n\t\t\t};\n\t\t\t// populate the pager element with pager links\n\t\t\tslider.pagerEl.html(pagerHtml);\n\t\t}\n\n\t\t/**\n\t\t * Appends the pager to the controls element\n\t\t */\n\t\tvar appendPager = function(){\n\t\t\tif(!slider.settings.pagerCustom){\n\t\t\t\t// create the pager DOM element\n\t\t\t\tslider.pagerEl = $('<div class=\"bx-pager\" />');\n\t\t\t\t// if a pager selector was supplied, populate it with the pager\n\t\t\t\tif(slider.settings.pagerSelector){\n\t\t\t\t\t$(slider.settings.pagerSelector).html(slider.pagerEl);\n\t\t\t\t// if no pager selector was supplied, add it after the wrapper\n\t\t\t\t}else{\n\t\t\t\t\tslider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n\t\t\t\t}\n\t\t\t\t// populate the pager\n\t\t\t\tpopulatePager();\n\t\t\t}else{\n\t\t\t\tslider.pagerEl = $(slider.settings.pagerCustom);\n\t\t\t}\n\t\t\t// assign the pager click binding\n\t\t\tslider.pagerEl.on('click', 'a', clickPagerBind);\n\t\t}\n\n\t\t/**\n\t\t * Appends prev / next controls to the controls element\n\t\t */\n\t\tvar appendControls = function(){\n\t\t\tslider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n\t\t\tslider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n\t\t\t// bind click actions to the controls\n\t\t\tslider.controls.next.bind('click', clickNextBind);\n\t\t\tslider.controls.prev.bind('click', clickPrevBind);\n\t\t\t// if nextSlector was supplied, populate it\n\t\t\tif(slider.settings.nextSelector){\n\t\t\t\t$(slider.settings.nextSelector).append(slider.controls.next);\n\t\t\t}\n\t\t\t// if prevSlector was supplied, populate it\n\t\t\tif(slider.settings.prevSelector){\n\t\t\t\t$(slider.settings.prevSelector).append(slider.controls.prev);\n\t\t\t}\n\t\t\t// if no custom selectors were supplied\n\t\t\tif(!slider.settings.nextSelector && !slider.settings.prevSelector){\n\t\t\t\t// add the controls to the DOM\n\t\t\t\tslider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n\t\t\t\t// add the control elements to the directionEl\n\t\t\t\tslider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n\t\t\t\t// slider.viewport.append(slider.controls.directionEl);\n\t\t\t\tslider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Appends start / stop auto controls to the controls element\n\t\t */\n\t\tvar appendControlsAuto = function(){\n\t\t\tslider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n\t\t\tslider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n\t\t\t// add the controls to the DOM\n\t\t\tslider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n\t\t\t// bind click actions to the controls\n\t\t\tslider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n\t\t\tslider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n\t\t\t// if autoControlsCombine, insert only the \"start\" control\n\t\t\tif(slider.settings.autoControlsCombine){\n\t\t\t\tslider.controls.autoEl.append(slider.controls.start);\n\t\t\t// if autoControlsCombine is false, insert both controls\n\t\t\t}else{\n\t\t\t\tslider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n\t\t\t}\n\t\t\t// if auto controls selector was supplied, populate it with the controls\n\t\t\tif(slider.settings.autoControlsSelector){\n\t\t\t\t$(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n\t\t\t// if auto controls selector was not supplied, add it after the wrapper\n\t\t\t}else{\n\t\t\t\tslider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n\t\t\t}\n\t\t\t// update the auto controls\n\t\t\tupdateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n\t\t}\n\n\t\t/**\n\t\t * Appends image captions to the DOM\n\t\t */\n\t\tvar appendCaptions = function(){\n\t\t\t// cycle through each child\n\t\t\tslider.children.each(function(index){\n\t\t\t\t// get the image title attribute\n\t\t\t\tvar title = $(this).find('img:first').attr('title');\n\t\t\t\t// append the caption\n\t\t\t\tif (title != undefined && ('' + title).length) {\n                    $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n                }\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Click next binding\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar clickNextBind = function(e){\n\t\t\t// if auto show is running, stop it\n\t\t\tif (slider.settings.auto) el.stopAuto();\n\t\t\tel.goToNextSlide();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t/**\n\t\t * Click prev binding\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar clickPrevBind = function(e){\n\t\t\t// if auto show is running, stop it\n\t\t\tif (slider.settings.auto) el.stopAuto();\n\t\t\tel.goToPrevSlide();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t/**\n\t\t * Click start binding\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar clickStartBind = function(e){\n\t\t\tel.startAuto();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t/**\n\t\t * Click stop binding\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar clickStopBind = function(e){\n\t\t\tel.stopAuto();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\t/**\n\t\t * Click pager binding\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar clickPagerBind = function(e){\n\t\t\t// if auto show is running, stop it\n\t\t\tif (slider.settings.auto) el.stopAuto();\n\t\t\tvar pagerLink = $(e.currentTarget);\n\t\t\tif(pagerLink.attr('data-slide-index') !== undefined){\n\t\t\t\tvar pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n\t\t\t\t// if clicked pager link is not active, continue with the goToSlide call\n\t\t\t\tif(pagerIndex != slider.active.index) el.goToSlide(pagerIndex);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the pager links with an active class\n\t\t *\n\t\t * @param slideIndex (int)\n\t\t *  - index of slide to make active\n\t\t */\n\t\tvar updatePagerActive = function(slideIndex){\n\t\t\t// if \"short\" pager type\n\t\t\tvar len = slider.children.length; // nb of children\n\t\t\tif(slider.settings.pagerType == 'short'){\n\t\t\t\tif(slider.settings.maxSlides > 1) {\n\t\t\t\t\tlen = Math.ceil(slider.children.length/slider.settings.maxSlides);\n\t\t\t\t}\n\t\t\t\tslider.pagerEl.html( (slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// remove all pager active classes\n\t\t\tslider.pagerEl.find('a').removeClass('active');\n\t\t\t// apply the active class for all pagers\n\t\t\tslider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });\n\t\t}\n\n\t\t/**\n\t\t * Performs needed actions after a slide transition\n\t\t */\n\t\tvar updateAfterSlideTransition = function(){\n\t\t\t// if infinte loop is true\n\t\t\tif(slider.settings.infiniteLoop){\n\t\t\t\tvar position = '';\n\t\t\t\t// first slide\n\t\t\t\tif(slider.active.index == 0){\n\t\t\t\t\t// set the new position\n\t\t\t\t\tposition = slider.children.eq(0).position();\n\t\t\t\t// carousel, last slide\n\t\t\t\t}else if(slider.active.index == getPagerQty() - 1 && slider.carousel){\n\t\t\t\t\tposition = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n\t\t\t\t// last slide\n\t\t\t\t}else if(slider.active.index == slider.children.length - 1){\n\t\t\t\t\tposition = slider.children.eq(slider.children.length - 1).position();\n\t\t\t\t}\n\t\t\t\tif(position){\n\t\t\t\t\tif (slider.settings.mode == 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n\t\t\t\t\telse if (slider.settings.mode == 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n\t\t\t\t}\n\t\t\t}\n\t\t\t// declare that the transition is complete\n\t\t\tslider.working = false;\n\t\t\t// onSlideAfter callback\n\t\t\tslider.settings.onSlideAfter(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\t\t}\n\n\t\t/**\n\t\t * Updates the auto controls state (either active, or combined switch)\n\t\t *\n\t\t * @param state (string) \"start\", \"stop\"\n\t\t *  - the new state of the auto show\n\t\t */\n\t\tvar updateAutoControls = function(state){\n\t\t\t// if autoControlsCombine is true, replace the current control with the new state\n\t\t\tif(slider.settings.autoControlsCombine){\n\t\t\t\tslider.controls.autoEl.html(slider.controls[state]);\n\t\t\t// if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n\t\t\t}else{\n\t\t\t\tslider.controls.autoEl.find('a').removeClass('active');\n\t\t\t\tslider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the direction controls (checks if either should be hidden)\n\t\t */\n\t\tvar updateDirectionControls = function(){\n\t\t\tif(getPagerQty() == 1){\n\t\t\t\tslider.controls.prev.addClass('disabled');\n\t\t\t\tslider.controls.next.addClass('disabled');\n\t\t\t}else if(!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd){\n\t\t\t\t// if first slide\n\t\t\t\tif (slider.active.index == 0){\n\t\t\t\t\tslider.controls.prev.addClass('disabled');\n\t\t\t\t\tslider.controls.next.removeClass('disabled');\n\t\t\t\t// if last slide\n\t\t\t\t}else if(slider.active.index == getPagerQty() - 1){\n\t\t\t\t\tslider.controls.next.addClass('disabled');\n\t\t\t\t\tslider.controls.prev.removeClass('disabled');\n\t\t\t\t// if any slide in the middle\n\t\t\t\t}else{\n\t\t\t\t\tslider.controls.prev.removeClass('disabled');\n\t\t\t\t\tslider.controls.next.removeClass('disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Initialzes the auto process\n\t\t */\n\t\tvar initAuto = function(){\n\t\t\t// if autoDelay was supplied, launch the auto show using a setTimeout() call\n\t\t\tif(slider.settings.autoDelay > 0){\n\t\t\t\tvar timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n\t\t\t// if autoDelay was not supplied, start the auto show normally\n\t\t\t}else{\n\t\t\t\tel.startAuto();\n\t\t\t}\n\t\t\t// if autoHover is requested\n\t\t\tif(slider.settings.autoHover){\n\t\t\t\t// on el hover\n\t\t\t\tel.hover(function(){\n\t\t\t\t\t// if the auto show is currently playing (has an active interval)\n\t\t\t\t\tif(slider.interval){\n\t\t\t\t\t\t// stop the auto show and pass true agument which will prevent control update\n\t\t\t\t\t\tel.stopAuto(true);\n\t\t\t\t\t\t// create a new autoPaused value which will be used by the relative \"mouseout\" event\n\t\t\t\t\t\tslider.autoPaused = true;\n\t\t\t\t\t}\n\t\t\t\t}, function(){\n\t\t\t\t\t// if the autoPaused value was created be the prior \"mouseover\" event\n\t\t\t\t\tif(slider.autoPaused){\n\t\t\t\t\t\t// start the auto show and pass true agument which will prevent control update\n\t\t\t\t\t\tel.startAuto(true);\n\t\t\t\t\t\t// reset the autoPaused value\n\t\t\t\t\t\tslider.autoPaused = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Initialzes the ticker process\n\t\t */\n\t\tvar initTicker = function(){\n\t\t\tvar startPosition = 0;\n\t\t\t// if autoDirection is \"next\", append a clone of the entire slider\n\t\t\tif(slider.settings.autoDirection == 'next'){\n\t\t\t\tel.append(slider.children.clone().addClass('bx-clone'));\n\t\t\t// if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n\t\t\t}else{\n\t\t\t\tel.prepend(slider.children.clone().addClass('bx-clone'));\n\t\t\t\tvar position = slider.children.first().position();\n\t\t\t\tstartPosition = slider.settings.mode == 'horizontal' ? -position.left : -position.top;\n\t\t\t}\n\t\t\tsetPositionProperty(startPosition, 'reset', 0);\n\t\t\t// do not allow controls in ticker mode\n\t\t\tslider.settings.pager = false;\n\t\t\tslider.settings.controls = false;\n\t\t\tslider.settings.autoControls = false;\n\t\t\t// if autoHover is requested\n\t\t\tif(slider.settings.tickerHover && !slider.usingCSS){\n\t\t\t\t// on el hover\n\t\t\t\tslider.viewport.hover(function(){\n\t\t\t\t\tel.stop();\n\t\t\t\t}, function(){\n\t\t\t\t\t// calculate the total width of children (used to calculate the speed ratio)\n\t\t\t\t\tvar totalDimens = 0;\n\t\t\t\t\tslider.children.each(function(index){\n\t\t\t\t\t  totalDimens += slider.settings.mode == 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n\t\t\t\t\t});\n\t\t\t\t\t// calculate the speed ratio (used to determine the new speed to finish the paused animation)\n\t\t\t\t\tvar ratio = slider.settings.speed / totalDimens;\n\t\t\t\t\t// determine which property to use\n\t\t\t\t\tvar property = slider.settings.mode == 'horizontal' ? 'left' : 'top';\n\t\t\t\t\t// calculate the new speed\n\t\t\t\t\tvar newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n\t\t\t\t\ttickerLoop(newSpeed);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// start the ticker loop\n\t\t\ttickerLoop();\n\t\t}\n\n\t\t/**\n\t\t * Runs a continuous loop, news ticker-style\n\t\t */\n\t\tvar tickerLoop = function(resumeSpeed){\n\t\t\tspeed = resumeSpeed ? resumeSpeed : slider.settings.speed;\n\t\t\tvar position = {left: 0, top: 0};\n\t\t\tvar reset = {left: 0, top: 0};\n\t\t\t// if \"next\" animate left position to last child, then reset left to 0\n\t\t\tif(slider.settings.autoDirection == 'next'){\n\t\t\t\tposition = el.find('.bx-clone').first().position();\n\t\t\t// if \"prev\" animate left position to 0, then reset left to first non-clone child\n\t\t\t}else{\n\t\t\t\treset = slider.children.first().position();\n\t\t\t}\n\t\t\tvar animateProperty = slider.settings.mode == 'horizontal' ? -position.left : -position.top;\n\t\t\tvar resetValue = slider.settings.mode == 'horizontal' ? -reset.left : -reset.top;\n\t\t\tvar params = {resetValue: resetValue};\n\t\t\tsetPositionProperty(animateProperty, 'ticker', speed, params);\n\t\t}\n\n\t\t/**\n\t\t * Initializes touch events\n\t\t */\n\t\tvar initTouch = function(){\n\t\t\t// initialize object to contain all touch values\n\t\t\tslider.touch = {\n\t\t\t\tstart: {x: 0, y: 0},\n\t\t\t\tend: {x: 0, y: 0}\n\t\t\t}\n\t\t\tslider.viewport.bind('touchstart', onTouchStart);\n\t\t}\n\n\t\t/**\n\t\t * Event handler for \"touchstart\"\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar onTouchStart = function(e){\n\t\t\tif(slider.working){\n\t\t\t\te.preventDefault();\n\t\t\t}else{\n\t\t\t\t// record the original position when touch starts\n\t\t\t\tslider.touch.originalPos = el.position();\n\t\t\t\tvar orig = e.originalEvent;\n\t\t\t\t// record the starting touch x, y coordinates\n\t\t\t\tslider.touch.start.x = orig.changedTouches[0].pageX;\n\t\t\t\tslider.touch.start.y = orig.changedTouches[0].pageY;\n\t\t\t\t// bind a \"touchmove\" event to the viewport\n\t\t\t\tslider.viewport.bind('touchmove', onTouchMove);\n\t\t\t\t// bind a \"touchend\" event to the viewport\n\t\t\t\tslider.viewport.bind('touchend', onTouchEnd);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Event handler for \"touchmove\"\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar onTouchMove = function(e){\n\t\t\tvar orig = e.originalEvent;\n\t\t\t// if scrolling on y axis, do not prevent default\n\t\t\tvar xMovement = Math.abs(orig.changedTouches[0].pageX - slider.touch.start.x);\n\t\t\tvar yMovement = Math.abs(orig.changedTouches[0].pageY - slider.touch.start.y);\n\t\t\t// x axis swipe\n\t\t\tif((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX){\n\t\t\t\te.preventDefault();\n\t\t\t// y axis swipe\n\t\t\t}else if((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\tif(slider.settings.mode != 'fade' && slider.settings.oneToOneTouch){\n\t\t\t\tvar value = 0;\n\t\t\t\t// if horizontal, drag along x axis\n\t\t\t\tif(slider.settings.mode == 'horizontal'){\n\t\t\t\t\tvar change = orig.changedTouches[0].pageX - slider.touch.start.x;\n\t\t\t\t\tvalue = slider.touch.originalPos.left + change;\n\t\t\t\t// if vertical, drag along y axis\n\t\t\t\t}else{\n\t\t\t\t\tvar change = orig.changedTouches[0].pageY - slider.touch.start.y;\n\t\t\t\t\tvalue = slider.touch.originalPos.top + change;\n\t\t\t\t}\n\t\t\t\tsetPositionProperty(value, 'reset', 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Event handler for \"touchend\"\n\t\t *\n\t\t * @param e (event)\n\t\t *  - DOM event object\n\t\t */\n\t\tvar onTouchEnd = function(e){\n\t\t\tslider.viewport.unbind('touchmove', onTouchMove);\n\t\t\tvar orig = e.originalEvent;\n\t\t\tvar value = 0;\n\t\t\t// record end x, y positions\n\t\t\tslider.touch.end.x = orig.changedTouches[0].pageX;\n\t\t\tslider.touch.end.y = orig.changedTouches[0].pageY;\n\t\t\t// if fade mode, check if absolute x distance clears the threshold\n\t\t\tif(slider.settings.mode == 'fade'){\n\t\t\t\tvar distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n\t\t\t\tif(distance >= slider.settings.swipeThreshold){\n\t\t\t\t\tslider.touch.start.x > slider.touch.end.x ? el.goToNextSlide() : el.goToPrevSlide();\n\t\t\t\t\tel.stopAuto();\n\t\t\t\t}\n\t\t\t// not fade mode\n\t\t\t}else{\n\t\t\t\tvar distance = 0;\n\t\t\t\t// calculate distance and el's animate property\n\t\t\t\tif(slider.settings.mode == 'horizontal'){\n\t\t\t\t\tdistance = slider.touch.end.x - slider.touch.start.x;\n\t\t\t\t\tvalue = slider.touch.originalPos.left;\n\t\t\t\t}else{\n\t\t\t\t\tdistance = slider.touch.end.y - slider.touch.start.y;\n\t\t\t\t\tvalue = slider.touch.originalPos.top;\n\t\t\t\t}\n\t\t\t\t// if not infinite loop and first / last slide, do not attempt a slide transition\n\t\t\t\tif(!slider.settings.infiniteLoop && ((slider.active.index == 0 && distance > 0) || (slider.active.last && distance < 0))){\n\t\t\t\t\tsetPositionProperty(value, 'reset', 200);\n\t\t\t\t}else{\n\t\t\t\t\t// check if distance clears threshold\n\t\t\t\t\tif(Math.abs(distance) >= slider.settings.swipeThreshold){\n\t\t\t\t\t\tdistance < 0 ? el.goToNextSlide() : el.goToPrevSlide();\n\t\t\t\t\t\tel.stopAuto();\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// el.animate(property, 200);\n\t\t\t\t\t\tsetPositionProperty(value, 'reset', 200);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tslider.viewport.unbind('touchend', onTouchEnd);\n\t\t}\n\n\t\t/**\n\t\t * Window resize event callback\n\t\t */\n\t\tvar resizeWindow = function(e){\n\t\t\t// don't do anything if slider isn't initialized.\n\t\t\tif(!slider.initialized) return;\n\t\t\t// get the new window dimens (again, thank you IE)\n\t\t\tvar windowWidthNew = $(window).width();\n\t\t\tvar windowHeightNew = $(window).height();\n\t\t\t// make sure that it is a true window resize\n\t\t\t// *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n\t\t\t// are resized. Can you just die already?*\n\t\t\tif(windowWidth != windowWidthNew || windowHeight != windowHeightNew){\n\t\t\t\t// set the new window dimens\n\t\t\t\twindowWidth = windowWidthNew;\n\t\t\t\twindowHeight = windowHeightNew;\n\t\t\t\t// update all dynamic elements\n\t\t\t\tel.redrawSlider();\n\t\t\t\t// Call user resize handler\n\t\t\t\tslider.settings.onSliderResize.call(el, slider.active.index);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ===================================================================================\n\t\t * = PUBLIC FUNCTIONS\n\t\t * ===================================================================================\n\t\t */\n\n\t\t/**\n\t\t * Performs slide transition to the specified slide\n\t\t *\n\t\t * @param slideIndex (int)\n\t\t *  - the destination slide's index (zero-based)\n\t\t *\n\t\t * @param direction (string)\n\t\t *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n\t\t */\n\t\tel.goToSlide = function(slideIndex, direction){\n\t\t\t// if plugin is currently in motion, ignore request\n\t\t\tif(slider.working || slider.active.index == slideIndex) return;\n\t\t\t// declare that plugin is in motion\n\t\t\tslider.working = true;\n\t\t\t// store the old index\n\t\t\tslider.oldIndex = slider.active.index;\n\t\t\t// if slideIndex is less than zero, set active index to last child (this happens during infinite loop)\n\t\t\tif(slideIndex < 0){\n\t\t\t\tslider.active.index = getPagerQty() - 1;\n\t\t\t// if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n\t\t\t}else if(slideIndex >= getPagerQty()){\n\t\t\t\tslider.active.index = 0;\n\t\t\t// set active index to requested slide\n\t\t\t}else{\n\t\t\t\tslider.active.index = slideIndex;\n\t\t\t}\n\t\t\t// onSlideBefore, onSlideNext, onSlidePrev callbacks\n\t\t\tslider.settings.onSlideBefore(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\t\t\tif(direction == 'next'){\n\t\t\t\tslider.settings.onSlideNext(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\t\t\t}else if(direction == 'prev'){\n\t\t\t\tslider.settings.onSlidePrev(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\t\t\t}\n\t\t\t// check if last slide\n\t\t\tslider.active.last = slider.active.index >= getPagerQty() - 1;\n\t\t\t// update the pager with active class\n\t\t\tif(slider.settings.pager) updatePagerActive(slider.active.index);\n\t\t\t// // check for direction control update\n\t\t\tif(slider.settings.controls) updateDirectionControls();\n\t\t\t// if slider is set to mode: \"fade\"\n\t\t\tif(slider.settings.mode == 'fade'){\n\t\t\t\t// if adaptiveHeight is true and next height is different from current height, animate to the new height\n\t\t\t\tif(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){\n\t\t\t\t\tslider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n\t\t\t\t}\n\t\t\t\t// fade out the visible child and reset its z-index value\n\t\t\t\tslider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n\t\t\t\t// fade in the newly requested slide\n\t\t\t\tslider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex+1).fadeIn(slider.settings.speed, function(){\n\t\t\t\t\t$(this).css('zIndex', slider.settings.slideZIndex);\n\t\t\t\t\tupdateAfterSlideTransition();\n\t\t\t\t});\n\t\t\t// slider mode is not \"fade\"\n\t\t\t}else{\n\t\t\t\t// if adaptiveHeight is true and next height is different from current height, animate to the new height\n\t\t\t\tif(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){\n\t\t\t\t\tslider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n\t\t\t\t}\n\t\t\t\tvar moveBy = 0;\n\t\t\t\tvar position = {left: 0, top: 0};\n\t\t\t\t// if carousel and not infinite loop\n\t\t\t\tif(!slider.settings.infiniteLoop && slider.carousel && slider.active.last){\n\t\t\t\t\tif(slider.settings.mode == 'horizontal'){\n\t\t\t\t\t\t// get the last child position\n\t\t\t\t\t\tvar lastChild = slider.children.eq(slider.children.length - 1);\n\t\t\t\t\t\tposition = lastChild.position();\n\t\t\t\t\t\t// calculate the position of the last slide\n\t\t\t\t\t\tmoveBy = slider.viewport.width() - lastChild.outerWidth();\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// get last showing index position\n\t\t\t\t\t\tvar lastShowingIndex = slider.children.length - slider.settings.minSlides;\n\t\t\t\t\t\tposition = slider.children.eq(lastShowingIndex).position();\n\t\t\t\t\t}\n\t\t\t\t\t// horizontal carousel, going previous while on first slide (infiniteLoop mode)\n\t\t\t\t}else if(slider.carousel && slider.active.last && direction == 'prev'){\n\t\t\t\t\t// get the last child position\n\t\t\t\t\tvar eq = slider.settings.moveSlides == 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n\t\t\t\t\tvar lastChild = el.children('.bx-clone').eq(eq);\n\t\t\t\t\tposition = lastChild.position();\n\t\t\t\t// if infinite loop and \"Next\" is clicked on the last slide\n\t\t\t\t}else if(direction == 'next' && slider.active.index == 0){\n\t\t\t\t\t// get the last clone position\n\t\t\t\t\tposition = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n\t\t\t\t\tslider.active.last = false;\n\t\t\t\t// normal non-zero requests\n\t\t\t\t}else if(slideIndex >= 0){\n\t\t\t\t\tvar requestEl = slideIndex * getMoveBy();\n\t\t\t\t\tposition = slider.children.eq(requestEl).position();\n\t\t\t\t}\n\n\t\t\t\t/* If the position doesn't exist\n\t\t\t\t * (e.g. if you destroy the slider on a next click),\n\t\t\t\t * it doesn't throw an error.\n\t\t\t\t */\n\t\t\t\tif (\"undefined\" !== typeof(position)) {\n\t\t\t\t\tvar value = slider.settings.mode == 'horizontal' ? -(position.left - moveBy) : -position.top;\n\t\t\t\t\t// plugin values to be animated\n\t\t\t\t\tsetPositionProperty(value, 'slide', slider.settings.speed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Transitions to the next slide in the show\n\t\t */\n\t\tel.goToNextSlide = function(){\n\t\t\t// if infiniteLoop is false and last page is showing, disregard call\n\t\t\tif (!slider.settings.infiniteLoop && slider.active.last) return;\n\t\t\tvar pagerIndex = parseInt(slider.active.index) + 1;\n\t\t\tel.goToSlide(pagerIndex, 'next');\n\t\t}\n\n\t\t/**\n\t\t * Transitions to the prev slide in the show\n\t\t */\n\t\tel.goToPrevSlide = function(){\n\t\t\t// if infiniteLoop is false and last page is showing, disregard call\n\t\t\tif (!slider.settings.infiniteLoop && slider.active.index == 0) return;\n\t\t\tvar pagerIndex = parseInt(slider.active.index) - 1;\n\t\t\tel.goToSlide(pagerIndex, 'prev');\n\t\t}\n\n\t\t/**\n\t\t * Starts the auto show\n\t\t *\n\t\t * @param preventControlUpdate (boolean)\n\t\t *  - if true, auto controls state will not be updated\n\t\t */\n\t\tel.startAuto = function(preventControlUpdate){\n\t\t\t// if an interval already exists, disregard call\n\t\t\tif(slider.interval) return;\n\t\t\t// create an interval\n\t\t\tslider.interval = setInterval(function(){\n\t\t\t\tslider.settings.autoDirection == 'next' ? el.goToNextSlide() : el.goToPrevSlide();\n\t\t\t}, slider.settings.pause);\n\t\t\t// if auto controls are displayed and preventControlUpdate is not true\n\t\t\tif (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('stop');\n\t\t}\n\n\t\t/**\n\t\t * Stops the auto show\n\t\t *\n\t\t * @param preventControlUpdate (boolean)\n\t\t *  - if true, auto controls state will not be updated\n\t\t */\n\t\tel.stopAuto = function(preventControlUpdate){\n\t\t\t// if no interval exists, disregard call\n\t\t\tif(!slider.interval) return;\n\t\t\t// clear the interval\n\t\t\tclearInterval(slider.interval);\n\t\t\tslider.interval = null;\n\t\t\t// if auto controls are displayed and preventControlUpdate is not true\n\t\t\tif (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('start');\n\t\t}\n\n\t\t/**\n\t\t * Returns current slide index (zero-based)\n\t\t */\n\t\tel.getCurrentSlide = function(){\n\t\t\treturn slider.active.index;\n\t\t}\n\n\t\t/**\n\t\t * Returns current slide element\n\t\t */\n\t\tel.getCurrentSlideElement = function(){\n\t\t\treturn slider.children.eq(slider.active.index);\n\t\t}\n\n\t\t/**\n\t\t * Returns number of slides in show\n\t\t */\n\t\tel.getSlideCount = function(){\n\t\t\treturn slider.children.length;\n\t\t}\n\n\t\t/**\n\t\t * Update all dynamic slider elements\n\t\t */\n\t\tel.redrawSlider = function(){\n\t\t\t// resize all children in ratio to new screen size\n\t\t\tslider.children.add(el.find('.bx-clone')).width(getSlideWidth());\n\t\t\t// adjust the height\n\t\t\tslider.viewport.css('height', getViewportHeight());\n\t\t\t// update the slide position\n\t\t\tif(!slider.settings.ticker) setSlidePosition();\n\t\t\t// if active.last was true before the screen resize, we want\n\t\t\t// to keep it last no matter what screen size we end on\n\t\t\tif (slider.active.last) slider.active.index = getPagerQty() - 1;\n\t\t\t// if the active index (page) no longer exists due to the resize, simply set the index as last\n\t\t\tif (slider.active.index >= getPagerQty()) slider.active.last = true;\n\t\t\t// if a pager is being displayed and a custom pager is not being used, update it\n\t\t\tif(slider.settings.pager && !slider.settings.pagerCustom){\n\t\t\t\tpopulatePager();\n\t\t\t\tupdatePagerActive(slider.active.index);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Destroy the current instance of the slider (revert everything back to original state)\n\t\t */\n\t\tel.destroySlider = function(){\n\t\t\t// don't do anything if slider has already been destroyed\n\t\t\tif(!slider.initialized) return;\n\t\t\tslider.initialized = false;\n\t\t\t$('.bx-clone', this).remove();\n\t\t\tslider.children.each(function() {\n\t\t\t\t$(this).data(\"origStyle\") != undefined ? $(this).attr(\"style\", $(this).data(\"origStyle\")) : $(this).removeAttr('style');\n\t\t\t});\n\t\t\t$(this).data(\"origStyle\") != undefined ? this.attr(\"style\", $(this).data(\"origStyle\")) : $(this).removeAttr('style');\n\t\t\t$(this).unwrap().unwrap();\n\t\t\tif(slider.controls.el) slider.controls.el.remove();\n\t\t\tif(slider.controls.next) slider.controls.next.remove();\n\t\t\tif(slider.controls.prev) slider.controls.prev.remove();\n\t\t\tif(slider.pagerEl && slider.settings.controls) slider.pagerEl.remove();\n\t\t\t$('.bx-caption', this).remove();\n\t\t\tif(slider.controls.autoEl) slider.controls.autoEl.remove();\n\t\t\tclearInterval(slider.interval);\n\t\t\tif(slider.settings.responsive) $(window).unbind('resize', resizeWindow);\n\t\t}\n\n\t\t/**\n\t\t * Reload the slider (revert all DOM changes, and re-initialize)\n\t\t */\n\t\tel.reloadSlider = function(settings){\n\t\t\tif (settings != undefined) options = settings;\n\t\t\tel.destroySlider();\n\t\t\tinit();\n\t\t}\n\n\t\tinit();\n\n\t\t// returns the current jQuery object\n\t\treturn this;\n\t}\n\n})(jQuery);\n"],"sourceRoot":"/source/"}